# 하노이 탑 이동 순서
# 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라.
# 두 번째 줄부터 수행 과정을 출력한다. 
# 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 
# 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.





# 5층 예시
# 5층은 홀수니까 1은 3으로 가야한다 - 초기화

# 2번을 1이 없는 자리로 - 1)
# 1번을 1높은값인 2가 있는 자리로 - 2)

# 다른건 다 반복인데 1, 2층은 예외! - 하드코딩

# 3번을 1이 없는 자리로 - 1)
# 1을 3이 있지 않은 곳으로 옮김.. <3 위에> <2층을 쌓아야>하니까 - 초기화
# 2를 1 높은값이 3이 있는 자리로 - 2)
# 1을 2가 있는 자리로 - 2)

# 4를 빈 자리로 - 1)
# 1을 4가 있는 자리로.. 4위에 3층을 쌓아야 하니까 - 초기화
# 2를 1이 없는<(1 위에 쌓을 수 없으니까)> 자리로 - 1)
# 1을 2가 있는 자리로 - 2)
# 3을 자기보다 1 높은 4 위로 - 2)
# 1을 3이 있지 안흔 곳으로.. 3 위에 2층을 쌓아햐하니까 - 초기화
# 2를 자기보다 +1인 3 위로 - 2)
# 1을 +1인 2 위로 - 2)

# 5를 빈 자리로 - 1)
# 1을 4로 - 초기화 ..... 초기화의 경우 1을 4로, 3없는곳으로, 2로 이런 식으로 계쏙 감! 이게 규칙
# 2를 나머지로 - 1)
# 1을 2로 - 2)
# 3을 2가 없는 자리로 - 1)
# 1을 3 없는 자리로 - 초기화
# 2를 3으로 - 2)
# 1을 2로 - 2)
# 4를 5로 - 2)
# 1을 5로 - 초기화
# 2를 빈자리로 - 1)
# 1을 2로 - 2)
# 3을 4로 - 2)
# 1을 3 없는 곳으로 - 초기화
# 2를 3으로 - 2)
# 1을 2로 - 2)

# 만약 6이라면?
# 6(121) 3(121) 4() 3() 5() 3() 4() 3()
# 
# 7이라면?
# 7 (3 4 3) 5 (3 4 3) 6 (3 4 3) 5 (3 4 3) 6 (3 4 3) 5 (3 4 3)
# 
# 8이라면?
# 8 5 6 5 7 5 6 5
# 9라면?
# 9 (5 6 5) 7 (5 6 5) 8 (5 6 5) 7 (5 6 5)
# 10?
# 10 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 5 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 6 1 2 1 3 1 2 1 4 1 2 1
# 10 9반복(9 옮기는거 제외) 9 8반복(8옮제외) 8 7반복(7옮제외) 7.... 5 4반복 



# num =2
# result = '홀수' if num%2 else '짝수'
# print(result)


# hanoi[0] = 2
# print(hanoi)

K = int(input()) # 탑 높이 입력
print(K)

# 하노이탑 모형
# hanoi[0] = 3이라면 원판 1이 3번째 봉에 들어가있는거
hanoi = []
for i in range(K+1):
    hanoi.append(1)

def hanoi_print (floor):
    for ring in range(1, floor+1):
        if ring == 1:
            print('1번', hanoi[ring], end=' ')
            hanoi[ring] = 3 if ring%2 else 2  # K가 홀수이면 원판1을 봉3으로, 짝수면 봉2로
            print(hanoi[ring])
                # if K%2: # K가 홀수일 땐
                #     hanoi[0] = 3
                #     print(1, 3)
                # else:
                #     hanoi[0] = 2
                #     print(1, 2)
            # hanoi[ring] = 3 # 몇번째 단계이든 시작은 해당 단계 base원판을 3으로 옮기는걸로 시작
            # print(1, 3)
            # elif ring == 2:
            #     print(hanoi[2], end=' ')
            #     hanoi[2] = 2 if hanoi[0] == 3 else 3 # 원판2를 원판1이 없는 곳으로
            #     print(hanoi[2])
        else:
            print('2번', hanoi[ring], end=' ')
            hanoi[ring] = 2 if hanoi[ring-1] == 3 else 3 # 원판2를 원판1이 없는 곳으로
            print(hanoi[ring])
            hanoi_print(ring-1)
            
hanoi_print(K) # 함수 실행
    

